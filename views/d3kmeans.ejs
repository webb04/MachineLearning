<% include nav.ejs %>
<div class="statusTracker">
  <h6 class="unselected">1. Select</h6>
  <h6 class="unselected">2. Train</h6>
  <h6>3. Predict</h6>
</div>
<div class="progress updated">
  <div class="determinate select" style="width: 100%"></div>
</div>

<script src="http://d3js.org/d3.v3.min.js"></script>
<div id="react-main-mount"></div>
<div id="visualisation"></div>
<script>
  var target = <%- JSON.stringify(targets) %>;
  var data = <%- data %>;
  var featureA = <%- JSON.stringify(featureA) %>
  var featureB = <%- JSON.stringify(featureB) %>
  var featureALabel = <%- JSON.stringify(featureALabel) %>
  var featureBLabel = <%- JSON.stringify(featureBLabel) %>

  var i = 0;
  for (item in data) {
    data[item]["target"] = target[i];
    i++;
  }

  var margin = {top: 20, right: 20, bottom: 30, left: 60},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;

  // x axis
  var xValue = function(d) { return d[featureALabel];},
      xScale = d3.scale.linear().range([0, width]),
      xMap = function(d) { return xScale(xValue(d));},
      xAxis = d3.svg.axis().scale(xScale).orient("bottom");

  // y axis
  var yValue = function(d) { return d[featureBLabel];},
      yScale = d3.scale.linear().range([height, 0]),
      yMap = function(d) { return yScale(yValue(d));},
      yAxis = d3.svg.axis().scale(yScale).orient("left");

  // set fill colour
  var cValue = function(d) { return d.target;},
      color = d3.scale.category10();

  // add graph
  var svg = d3.select("#visualisation").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  // add tooltip
  var tooltip = d3.select("body").append("div")
      .attr("class", "tooltip")
      .style("opacity", 0);

  // load data
  // convert to numerical format
  data.forEach(function(d) {
    d[featureALabel] = +d[featureALabel];
    d[featureBLabel] = +d[featureBLabel];
  });

  // padding
  xScale.domain([d3.min(data, xValue)-1, d3.max(data, xValue)+1]);
  yScale.domain([d3.min(data, yValue)-1, d3.max(data, yValue)+1]);

  // x axis
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .append("text")
      .attr("class", "label")
      .attr("x", width)
      .attr("y", -6)
      .style("text-anchor", "end")
      .text(featureALabel);

  // y axis
  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("class", "label")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text(featureBLabel);

  // dots
  svg.selectAll(".dot")
      .data(data)
    .enter().append("circle")
      .attr("class", "dot")
      .attr("r", 9) // 4.5
      .attr("cx", xMap)
      .attr("cy", yMap)
      .style("fill", function(d) { return color(cValue(d));})
      .on("mouseover", function(d) {
        tooltip.transition()
         .duration(200)
         .style("opacity", .9);
        tooltip.html(d["target"] + "<br/> (" + xValue(d)
         + ", " + yValue(d) + ")")
         .style("left", (d3.event.pageX + 15) + "px")
         .style("top", (d3.event.pageY - 28) + "px");
       })
       .on("mouseout", function(d) {
         tooltip.transition()
         .duration(500)
         .style("opacity", 0);
       });

  // legend
  var legend = svg.selectAll(".legend")
    .data(color.domain())
    .enter().append("g")
    .attr("class", "legend")
    .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  // draw legend coloured rectangles
  legend.append("rect")
    .attr("x", width - 18)
    .attr("width", 18)
    .attr("height", 18)
    .style("fill", color);

  // legend text
  legend.append("text")
    .attr("x", width - 24)
    .attr("y", 9)
    .attr("dy", ".35em")
    .style("text-anchor", "end")
    .text(function(d) { return d;});

</script>

<!--Import jQuery before materialize.js-->
<script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script type="text/javascript" src="js/materialize.min.js"></script>
<script>
  $(document).ready(function() {
    $('select').material_select();
  });
</script>

</body>
</html>
